name: KBOT-CICD

on: push

permissions:
  contents: write

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run tests
        run: make test
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        env:
          APP: "ottomenbot/kbot"
          REGISTRY: ${{ secrets.DOCKER_USERNAME }}
        run: make image-linux push-linux
  cd:
    name: CD
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Package HELM chart
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - uses: mikefarah/yq@master
        with:
          cmd: yq -i '.image.tag=strenv(VERSION)' kbot/values.yaml
      - run: |
          # Parse values from values.yaml
          IMAGE_TAG=$(yq e '.image.tag' kbot/values.yaml)
          IMAGE_ARCH=$(yq e '.image.arch' kbot/values.yaml)

          # Clean values for filename use
          CLEAN_TAG=$(echo "$IMAGE_TAG" | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]')
          CLEAN_ARCH=$(echo "$IMAGE_ARCH" | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]')

          # Package chart
          helm package kbot/ -d ./ --version ${CLEAN_TAG}-${CLEAN_ARCH}

          # Package chart
          helm package kbot/ -d ./ --version ${CLEAN_TAG}-${CLEAN_ARCH}

      - run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git commit -am "update version $VERSION"
          git push

      - name: Install GitHub CLI
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          sudo apt-add-repository https://cli.github.com/packages
          sudo apt update
          sudo apt install gh

      - name: Make Github release
        uses: actions/github-script@v3

        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            gh release create
            gh release upload $VERSION -F ottomenbot-*.tgz
