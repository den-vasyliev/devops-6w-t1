name: KBOT-CICD

on:
  push:
    branches:
      - develop

permissions:
  contents: write

jobs:
  build_and_push:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run tests
        run: make test
      - name: Log in to registry
        run: echo "${{ secrets.GT_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        
      - name: Build and push to ghcr.io
        run: make image-linux push-linux
        env:
          REGISTRY: ghcr.io

      - run: echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV    

      - uses: mikefarah/yq@master
        with:
          cmd: yq -i '.image.tag=strenv(VERSION)' helm/values.yaml

      - run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git commit -am "Update image tag to $VERSION"
          git tag $VERSION
          git push origin $VERSION
  deploy:
    name: CD
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Set up kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
        shell: bash

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Deploy ArgoCD to Kubernetes
        run: |
          kubectl config use-context ${{ secrets.KUBERNETES_CONTEXT }}
          argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }}
          argocd app set ottomenbot --image ghcr.io/ottomen/ottomenbot:${{ github.sha }}
          argocd app sync ottomenbot
